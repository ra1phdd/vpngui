// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../models/models.js";

/**
 * @param {string} listType
 * @param {string} ruleType
 * @param {string} ruleValue
 * @returns {Promise<void> & { cancel(): void }}
 */
export function AddRule(listType, ruleType, ruleValue) {
    let $resultPromise = /** @type {any} */($Call.ByID(2656562242, listType, ruleType, ruleValue));
    return $resultPromise;
}

/**
 * @param {string} listType
 * @param {string} ruleType
 * @param {string} ruleValue
 * @returns {Promise<void> & { cancel(): void }}
 */
export function DeleteRule(listType, ruleType, ruleValue) {
    let $resultPromise = /** @type {any} */($Call.ByID(3831748372, listType, ruleType, ruleValue));
    return $resultPromise;
}

/**
 * @param {string} listType
 * @returns {Promise<models$0.ListConfig> & { cancel(): void }}
 */
export function GetRoutes(listType) {
    let $resultPromise = /** @type {any} */($Call.ByID(900413941, listType));
    let $typingPromise = /** @type {any} */($resultPromise.then(($result) => {
        return $$createType0($result);
    }));
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

// Private type creation functions
const $$createType0 = models$0.ListConfig.createFrom;
