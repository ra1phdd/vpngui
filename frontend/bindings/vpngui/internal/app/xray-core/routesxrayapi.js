// @ts-check
// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Ã‚ MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as models$0 from "../models/models.js";

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function ActualizeConfig() {
    let $resultPromise = /** @type {any} */($Call.ByID(2499906845));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @param {string} domain
 * @returns {Promise<void> & { cancel(): void }}
 */
export function AddDomain(listMode, domain) {
    let $resultPromise = /** @type {any} */($Call.ByID(2888351088, listMode, domain));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @param {string} ip
 * @returns {Promise<void> & { cancel(): void }}
 */
export function AddIP(listMode, ip) {
    let $resultPromise = /** @type {any} */($Call.ByID(430102085, listMode, ip));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @param {string} port
 * @returns {Promise<void> & { cancel(): void }}
 */
export function AddPort(listMode, port) {
    let $resultPromise = /** @type {any} */($Call.ByID(4024869583, listMode, port));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @param {string} domain
 * @returns {Promise<void> & { cancel(): void }}
 */
export function DelDomain(listMode, domain) {
    let $resultPromise = /** @type {any} */($Call.ByID(1632926814, listMode, domain));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @param {string} ip
 * @returns {Promise<void> & { cancel(): void }}
 */
export function DelIP(listMode, ip) {
    let $resultPromise = /** @type {any} */($Call.ByID(3082986715, listMode, ip));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @param {string} port
 * @returns {Promise<void> & { cancel(): void }}
 */
export function DelPort(listMode, port) {
    let $resultPromise = /** @type {any} */($Call.ByID(315636501, listMode, port));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function DisableBlackList() {
    let $resultPromise = /** @type {any} */($Call.ByID(4246693654));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function DisableRoutes() {
    let $resultPromise = /** @type {any} */($Call.ByID(3718076905));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function EnableBlackList() {
    let $resultPromise = /** @type {any} */($Call.ByID(490675829));
    return $resultPromise;
}

/**
 * @returns {Promise<void> & { cancel(): void }}
 */
export function EnableRoutes() {
    let $resultPromise = /** @type {any} */($Call.ByID(2511092524));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @returns {Promise<string> & { cancel(): void }}
 */
export function GetDomain(listMode) {
    let $resultPromise = /** @type {any} */($Call.ByID(54795275, listMode));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @returns {Promise<string> & { cancel(): void }}
 */
export function GetIP(listMode) {
    let $resultPromise = /** @type {any} */($Call.ByID(683195982, listMode));
    return $resultPromise;
}

/**
 * @param {string} listMode
 * @returns {Promise<string> & { cancel(): void }}
 */
export function GetPort(listMode) {
    let $resultPromise = /** @type {any} */($Call.ByID(2650306624, listMode));
    return $resultPromise;
}

/**
 * @param {models$0.OutboundConfig[] | null} outbounds
 * @param {string} tag1
 * @param {string} tag2
 * @returns {Promise<void> & { cancel(): void }}
 */
export function SwapOutbounds(outbounds, tag1, tag2) {
    let $resultPromise = /** @type {any} */($Call.ByID(1170879283, outbounds, tag1, tag2));
    return $resultPromise;
}
